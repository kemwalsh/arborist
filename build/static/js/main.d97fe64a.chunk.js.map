{"version":3,"sources":["data.tsx","App.tsx","index.tsx"],"names":["data","id","name","children","Node","_ref","node","style","dragHandle","updatedStyle","_objectSpread","_jsx","className","ref","onClick","toggle","_jsxs","border","isLeaf","width","height","src","App","Tree","initialData","rowHeight","rootElement","document","getElementById","ReactDOMClient","render","StrictMode"],"mappings":"mMAAaA,EAAO,CAClB,CAAEC,GAAI,IAAKC,KAAM,kBACjB,CAAED,GAAI,IAAKC,KAAM,kBACjB,CACED,GAAI,IACJC,KAAM,gBACNC,SAAU,CACR,CAAEF,GAAI,KAAMC,KAAM,iBAClB,CAAED,GAAI,KAAMC,KAAM,iBAClB,CAAED,GAAI,KAAMC,KAAM,mBAGtB,CACED,GAAI,IACJC,KAAM,kBACNC,SAAU,CACR,CAAEF,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,KAAMC,KAAM,c,OCbxB,SAASE,EAAIC,GAAuD,IAApDC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAUH,EAAVG,WACrBC,EAAYC,YAAA,GACbH,GAIL,OACEI,cAAA,OAAKC,UAAU,YAAYL,MAAOE,EAAcI,IAAKL,EACrDM,QAAS,kBAAMR,EAAKS,QAAQ,EAACZ,SAC3Ba,eAAA,OAAKT,MAAO,CAAEU,OAAQ,aAAcd,SAAA,CACjCG,EAAKY,OAASP,cAAA,OAAKJ,MAAO,CAAEY,MAAM,OAAQC,OAAO,QAAUC,IAAI,oCAA2CV,cAAA,OAAKJ,MAAO,CAAEY,MAAM,OAAQC,OAAO,QAAUC,IAAI,sCAA4C,IAAEf,EAAKN,KAAKE,SAI5N,CAEe,SAASoB,IACtB,OACEX,cAAA,OAAKC,UAAU,MAAKT,SAClBQ,cAACY,IAAI,CAACX,UAAU,OAAOY,YAAaxB,EAAMyB,UAAW,GAAGtB,SACrDC,KAIT,CCxBA,IAAMsB,EAAwBC,SAASC,eAAe,QACzCC,aAA0BH,GAElCI,OACHnB,cAACoB,aAAU,CAAA5B,SACTQ,cAACW,EAAG,M","file":"static/js/main.d97fe64a.chunk.js","sourcesContent":["export const data = [\n  { id: \"1\", name: \"Asset Parent 1\" },\n  { id: \"2\", name: \"Asset Parent 2\" },\n  {\n    id: \"3\",\n    name: \"Asset Level 1\",\n    children: [\n      { id: \"c1\", name: \"Asset Child 1\" },\n      { id: \"c2\", name: \"Asset Child 2\" },\n      { id: \"c3\", name: \"Asset Child 3\" }\n    ]\n  },\n  {\n    id: \"4\",\n    name: \"Assets Parent 3\",\n    children: [\n      { id: \"d1\", name: \"Bassetz\" },\n      { id: \"d2\", name: \"Cassetz\" },\n      { id: \"d3\", name: \"Dassetz\" }\n    ]\n  }\n];\n","import \"./styles.css\";\nimport { Tree, NodeRendererProps } from \"react-arborist\";\nimport { data } from \"./data\";\n\n\nfunction Node({ node, style, dragHandle }: NodeRendererProps<any>) {\n  const updatedStyle = {\n    ...style\n  };\n\n\n  return (\n    <div className=\"node-tree\" style={updatedStyle} ref={dragHandle}\n    onClick={() => node.toggle()}>\n      <div style={{ border: \"1px solid\" }}>\n        {node.isLeaf ? <img style={{ width:'50px', height:'50px' }} src='/static/media/crow.ba05125a.png'></img> : <img style={{ width:'50px', height:'50px' }} src='/static/media/puffer.2149c31b.png'></img> } {node.data.name}\n      </div>\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Tree className=\"node\" initialData={data} rowHeight={35}>\n        {Node}\n      </Tree>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport * as ReactDOMClient from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement : Element = document.getElementById(\"root\");\nconst root = ReactDOMClient.createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}